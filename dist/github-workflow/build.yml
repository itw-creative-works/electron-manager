name: Build & Publish

on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: Platform
        default: all
        options:
          - all
          - macos
          - windows
          - linux
  push:
    branches:
      - release 
  # schedule:
  #   - cron: '0 0 1 * *'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  APPLE_CERTIFICATES: ${{ secrets.APPLE_CERTIFICATES }}
  APPLE_CERTIFICATES_PASSWORD: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
  APPLE_CERTIFICATE_NAME: ${{ secrets.APPLE_CERTIFICATE_NAME }}
  APPLE_ID: ${{ secrets.APPLE_ID }}
  APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
  APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
  BACKEND_MANAGER_KEY: ${{ secrets.BACKEND_MANAGER_KEY }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
  INPUT_PLATFORM: ${{ inputs.platform }}

jobs:
  build-pre:
    name: Pre-build
    # needs: nothing
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
      - name: Run npm install
        run: npm install
      - name: Run pre-build script
        run: node ./node_modules/electron-manager/dist/github-workflow/githubActionBuildPre.js
  build-and-publish:
    name: Build & Publish
    needs: build-pre
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: macOS
            os: macos-latest
            run: ${{ inputs.platform == 'all' || inputs.platform == 'macos' }}
          - name: Windows
            os: windows-latest
            run: ${{ inputs.platform == 'all' || inputs.platform == 'windows' }}
          - name: Linux
            os: ubuntu-latest
            run: ${{ inputs.platform == 'all' || inputs.platform == 'linux' }}          
    steps:
      - name: Log operating system
        run: echo "os=${{ matrix.os }}, choice=$INPUT_PLATFORM, run=${{ matrix.run }}"
      - name: Check out Git repository
        if: ${{ matrix.run }}
        uses: actions/checkout@v3
      - name: Setup Node.js
        if: ${{ matrix.run }}
        uses: actions/setup-node@v3
      - name: Run npm install
        if: ${{ matrix.run }}
        run: npm install  
      - name: Run generation script
        if: ${{ matrix.run }}
        run: node ./node_modules/electron-manager/dist/github-workflow/githubActionBuildGen.js
      - name: Install Snapcraft (Linux)
        if: ${{ matrix.run && matrix.name == 'Linux' }}
        uses: samuelmeuli/action-snapcraft@v1
      - name: Build & publish Electron app
        if: ${{ matrix.run }}
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          mac_certs: ${{ secrets.APPLE_CERTIFICATES }}
          mac_certs_password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}
          release: true
      - name: Import Mac certificates
        if: ${{ matrix.run && matrix.name == 'macOS' }}
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATES }}
          p12-password: ${{ secrets.APPLE_CERTIFICATES_PASSWORD }}  
      - name: Re-sign and Upload MAS
        if: ${{ matrix.run && matrix.name == 'macOS' }}
        run: node ./node_modules/electron-manager/dist/github-workflow/githubActionBuildMacResign.js          
  build-post:
    name: Post-build
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3    
      - name: Setup Node.js
        uses: actions/setup-node@v3
      - name: Run npm install
        run: npm install
      - name: Run post-build script
        run: node ./node_modules/electron-manager/dist/github-workflow/githubActionBuildPost.js
      - name: Purge Artifacts
        uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          expire-in: 0 # Set this to 0 to delete all artifacts            
